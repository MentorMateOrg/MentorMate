// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role{
  MENTEE
  MENTOR
  UNKNOWN
}
model User {
  id Int @id @default(autoincrement())
  email String @unique
  encrypted_password String
  profile Profile?
  sentRequests ConnectionRequest[] @relation("sentRequests")
  receivedRequests ConnectionRequest[] @relation("receivedRequests")
}


model Profile {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  full_name String
  role Role
  profilePicUrl String? @default("https://static.vecteezy.com/system/resources/previews/055/581/121/non_2x/default-profile-picture-icon-avatar-photo-placeholder-illustration-vector.jpg")
  githubUrl String?
  fieldOfKnowledge String?
  experiences String[]
  linkedinUrl String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  interests String[]
  bio String?
}

model ConnectionRequest {
  id Int @id @default(autoincrement())
  senderId Int
  receiverId Int
  status String @default("PENDING")
  createdAt DateTime @default(now())
  sender User @relation("sentRequests", fields: [senderId], references: [id])
  receiver User @relation("receivedRequests", fields: [receiverId], references: [id])
}
